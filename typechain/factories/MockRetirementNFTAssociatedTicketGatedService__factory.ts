/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRetirementNFTAssociatedTicketGatedService,
  MockRetirementNFTAssociatedTicketGatedServiceInterface,
} from "../MockRetirementNFTAssociatedTicketGatedService";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract RetirementNFTAssociatedTicket",
        name: "retirementNFTAssociatedTicket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketType",
        type: "uint256",
      },
    ],
    name: "accessSpecialContent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyRetirementNFTAssociatedTicket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061041d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063040f60711461003b578063af9e86971461006b575b600080fd5b610055600480360381019061005091906101b3565b610089565b6040516100629190610299565b60405180910390f35b61007361016f565b6040516100809190610299565b60405180910390f35b6000338383600082905060008173ffffffffffffffffffffffffffffffffffffffff1662fdd58e86856040518363ffffffff1660e01b81526004016100cf929190610270565b60206040518083038186803b1580156100e757600080fd5b505afa1580156100fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011f91906101f3565b905060008111610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b906102b4565b60405180910390fd5b505050505092915050565b600090565b600081359050610183816103b9565b92915050565b600081359050610198816103d0565b92915050565b6000815190506101ad816103d0565b92915050565b600080604083850312156101ca576101c961033f565b5b60006101d885828601610174565b92505060206101e985828601610189565b9150509250929050565b6000602082840312156102095761020861033f565b5b60006102178482850161019e565b91505092915050565b610229816102e5565b82525050565b610238816102f7565b82525050565b600061024b6044836102d4565b915061025682610344565b606082019050919050565b61026a81610335565b82525050565b60006040820190506102856000830185610220565b6102926020830184610261565b9392505050565b60006020820190506102ae600083018461022f565b92915050565b600060208201905081810360008301526102cd8161023e565b9050919050565b600082825260208201905092915050565b60006102f082610315565b9050919050565b60008115159050919050565b600061030e826102e5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f412063616c6c65722073686f756c6420686173206d6f7265207468616e20312060008201527f6f6620746865205265746972656d656e744e46544173736f636961746564546960208201527f636b657400000000000000000000000000000000000000000000000000000000604082015250565b6103c281610303565b81146103cd57600080fd5b50565b6103d981610335565b81146103e457600080fd5b5056fea26469706673582212209925fe9ddafb21a43ae806740320a012eef24cca4cc3f5949bcea240253a782b64736f6c63430008070033";

type MockRetirementNFTAssociatedTicketGatedServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockRetirementNFTAssociatedTicketGatedServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockRetirementNFTAssociatedTicketGatedService__factory extends ContractFactory {
  constructor(
    ...args: MockRetirementNFTAssociatedTicketGatedServiceConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockRetirementNFTAssociatedTicketGatedService";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockRetirementNFTAssociatedTicketGatedService> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockRetirementNFTAssociatedTicketGatedService>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockRetirementNFTAssociatedTicketGatedService {
    return super.attach(
      address
    ) as MockRetirementNFTAssociatedTicketGatedService;
  }
  connect(
    signer: Signer
  ): MockRetirementNFTAssociatedTicketGatedService__factory {
    return super.connect(
      signer
    ) as MockRetirementNFTAssociatedTicketGatedService__factory;
  }
  static readonly contractName: "MockRetirementNFTAssociatedTicketGatedService";
  public readonly contractName: "MockRetirementNFTAssociatedTicketGatedService";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRetirementNFTAssociatedTicketGatedServiceInterface {
    return new utils.Interface(
      _abi
    ) as MockRetirementNFTAssociatedTicketGatedServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRetirementNFTAssociatedTicketGatedService {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockRetirementNFTAssociatedTicketGatedService;
  }
}
