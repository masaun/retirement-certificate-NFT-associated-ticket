/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockRetirementNFTAssociatedTicketGatedService,
  MockRetirementNFTAssociatedTicketGatedServiceInterface,
} from "../MockRetirementNFTAssociatedTicketGatedService";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract RetirementNFTAssociatedTicket",
        name: "retirementNFTAssociatedTicket",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketType",
        type: "uint256",
      },
    ],
    name: "accessSpecialContent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyRetirementNFTAssociatedTicket",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063040f60711461003b578063af9e86971461006b575b600080fd5b6100556004803603810190610050919061029a565b610089565b60405161006291906103b9565b60405180910390f35b610073610191565b60405161008091906103b9565b60405180910390f35b6000338383600082905060008173ffffffffffffffffffffffffffffffffffffffff1662fdd58e86856040518363ffffffff1660e01b81526004016100cf929190610390565b60206040518083038186803b1580156100e757600080fd5b505afa1580156100fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011f91906102da565b905060008111610164576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015b90610404565b60405180910390fd5b6101866040518060600160405280602a8152602001610587602a913933610196565b505050505092915050565b600090565b61022e82826040516024016101ac9291906103d4565b6040516020818303038152906040527f319af333000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610232565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60008135905061026a81610558565b92915050565b60008135905061027f8161056f565b92915050565b6000815190506102948161056f565b92915050565b600080604083850312156102b1576102b06104cd565b5b60006102bf8582860161025b565b92505060206102d085828601610270565b9150509250929050565b6000602082840312156102f0576102ef6104cd565b5b60006102fe84828501610285565b91505092915050565b61031081610440565b82525050565b61031f81610452565b82525050565b600061033082610424565b61033a818561042f565b935061034a81856020860161049a565b610353816104d2565b840191505092915050565b600061036b60448361042f565b9150610376826104e3565b606082019050919050565b61038a81610490565b82525050565b60006040820190506103a56000830185610307565b6103b26020830184610381565b9392505050565b60006020820190506103ce6000830184610316565b92915050565b600060408201905081810360008301526103ee8185610325565b90506103fd6020830184610307565b9392505050565b6000602082019050818103600083015261041d8161035e565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061044b82610470565b9050919050565b60008115159050919050565b600061046982610440565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156104b857808201518184015260208101905061049d565b838111156104c7576000848401525b50505050565b600080fd5b6000601f19601f8301169050919050565b7f412063616c6c65722073686f756c6420686173206d6f7265207468616e20312060008201527f6f6620746865205265746972656d656e744e46544173736f636961746564546960208201527f636b657400000000000000000000000000000000000000000000000000000000604082015250565b6105618161045e565b811461056c57600080fd5b50565b61057881610490565b811461058357600080fd5b5056fe2573206973207375636365737366756c20746f20616363657373207370656369616c20636f6e74656e74a26469706673582212203a32624cf17fe4d09988c866ebaa6c9580a3b4f701ef7bd1b2b19c95978e577b64736f6c63430008070033";

type MockRetirementNFTAssociatedTicketGatedServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockRetirementNFTAssociatedTicketGatedServiceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockRetirementNFTAssociatedTicketGatedService__factory extends ContractFactory {
  constructor(
    ...args: MockRetirementNFTAssociatedTicketGatedServiceConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockRetirementNFTAssociatedTicketGatedService";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockRetirementNFTAssociatedTicketGatedService> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockRetirementNFTAssociatedTicketGatedService>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockRetirementNFTAssociatedTicketGatedService {
    return super.attach(
      address
    ) as MockRetirementNFTAssociatedTicketGatedService;
  }
  connect(
    signer: Signer
  ): MockRetirementNFTAssociatedTicketGatedService__factory {
    return super.connect(
      signer
    ) as MockRetirementNFTAssociatedTicketGatedService__factory;
  }
  static readonly contractName: "MockRetirementNFTAssociatedTicketGatedService";
  public readonly contractName: "MockRetirementNFTAssociatedTicketGatedService";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRetirementNFTAssociatedTicketGatedServiceInterface {
    return new utils.Interface(
      _abi
    ) as MockRetirementNFTAssociatedTicketGatedServiceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockRetirementNFTAssociatedTicketGatedService {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockRetirementNFTAssociatedTicketGatedService;
  }
}
