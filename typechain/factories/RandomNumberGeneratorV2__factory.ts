/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RandomNumberGeneratorV2,
  RandomNumberGeneratorV2Interface,
} from "../RandomNumberGeneratorV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "ReturnedRandomness",
    type: "event",
  },
  {
    inputs: [],
    name: "getSRandomWords",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_s_randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610180604052620186a063ffffffff166101209063ffffffff1660e01b815250600361ffff166101409061ffff1660f01b815250600263ffffffff166101609063ffffffff1660e01b8152503480156200005857600080fd5b5060405162000ca338038062000ca383398181016040528101906200007e9190620001dd565b828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080610100818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff1660e08167ffffffffffffffff1660c01b8152505050505050620002f4565b600081519050620001a981620002a6565b92915050565b600081519050620001c081620002c0565b92915050565b600081519050620001d781620002da565b92915050565b60008060008060808587031215620001fa57620001f9620002a1565b5b60006200020a87828801620001c6565b94505060206200021d8782880162000198565b9350506040620002308782880162000198565b92505060606200024387828801620001af565b91505092959194509250565b60006200025c826200026d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b620002b1816200024f565b8114620002bd57600080fd5b50565b620002cb8162000263565b8114620002d757600080fd5b50565b620002e5816200028d565b8114620002f157600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160c01c610100516101205160e01c6101405160f01c6101605160e01c6109316200037260003960006102c801526000610286015260006102a70152600061024401526000610265015260005050600061020801526000818160f0015261014401526109316000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631fe543e31461005c5780633e10980814610078578063e0c8628914610096578063e89e106a146100a0578063f6eaffc8146100be575b600080fd5b61007660048036038101906100719190610569565b6100ee565b005b6100806101ae565b60405161008d91906106cd565b60405180910390f35b61009e610206565b005b6100a8610361565b6040516100b59190610742565b60405180910390f35b6100d860048036038101906100d3919061050f565b610367565b6040516100e59190610742565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a057337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016101979291906106a4565b60405180910390fd5b6101aa828261038b565b5050565b606060008054806020026020016040519081016040528092919081815260200182805480156101fc57602002820191906000526020600020905b8154815260200190600101908083116101e8575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040518663ffffffff1660e01b81526004016103079594939291906106ef565b602060405180830381600087803b15801561032157600080fd5b505af1158015610335573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610359919061053c565b600181905550565b60015481565b6000818154811061037757600080fd5b906000526020600020016000915090505481565b80600090805190602001906103a19291906103dd565b507fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e816040516103d191906106cd565b60405180910390a15050565b828054828255906000526020600020908101928215610419579160200282015b828111156104185782518255916020019190600101906103fd565b5b509050610426919061042a565b5090565b5b8082111561044357600081600090555060010161042b565b5090565b600061045a61045584610782565b61075d565b9050808382526020820190508285602086028201111561047d5761047c6108c4565b5b60005b858110156104ad578161049388826104e5565b845260208401935060208301925050600181019050610480565b5050509392505050565b600082601f8301126104cc576104cb6108bf565b5b81356104dc848260208601610447565b91505092915050565b6000813590506104f4816108e4565b92915050565b600081519050610509816108e4565b92915050565b600060208284031215610525576105246108ce565b5b6000610533848285016104e5565b91505092915050565b600060208284031215610552576105516108ce565b5b6000610560848285016104fa565b91505092915050565b600080604083850312156105805761057f6108ce565b5b600061058e858286016104e5565b925050602083013567ffffffffffffffff8111156105af576105ae6108c9565b5b6105bb858286016104b7565b9150509250929050565b60006105d18383610668565b60208301905092915050565b6105e6816107e7565b82525050565b60006105f7826107be565b61060181856107d6565b935061060c836107ae565b8060005b8381101561063d57815161062488826105c5565b975061062f836107c9565b925050600181019050610610565b5085935050505092915050565b610653816107f9565b82525050565b61066281610803565b82525050565b61067181610831565b82525050565b61068081610831565b82525050565b61068f8161083b565b82525050565b61069e8161084b565b82525050565b60006040820190506106b960008301856105dd565b6106c660208301846105dd565b9392505050565b600060208201905081810360008301526106e781846105ec565b905092915050565b600060a082019050610704600083018861064a565b6107116020830187610695565b61071e6040830186610659565b61072b6060830185610686565b6107386080830184610686565b9695505050505050565b60006020820190506107576000830184610677565b92915050565b6000610767610778565b9050610773828261085f565b919050565b6000604051905090565b600067ffffffffffffffff82111561079d5761079c610890565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006107f282610811565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b610868826108d3565b810181811067ffffffffffffffff8211171561088757610886610890565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6108ed81610831565b81146108f857600080fd5b5056fea26469706673582212205e3c90fbc4beac9125eed845ffdcc14f9228c88be6ce1a4d6d1a558a17d0441164736f6c63430008070033";

type RandomNumberGeneratorV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberGeneratorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberGeneratorV2__factory extends ContractFactory {
  constructor(...args: RandomNumberGeneratorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RandomNumberGeneratorV2";
  }

  deploy(
    subscriptionId: BigNumberish,
    vrfCoordinator: string,
    link: string,
    keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomNumberGeneratorV2> {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      link,
      keyHash,
      overrides || {}
    ) as Promise<RandomNumberGeneratorV2>;
  }
  getDeployTransaction(
    subscriptionId: BigNumberish,
    vrfCoordinator: string,
    link: string,
    keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      link,
      keyHash,
      overrides || {}
    );
  }
  attach(address: string): RandomNumberGeneratorV2 {
    return super.attach(address) as RandomNumberGeneratorV2;
  }
  connect(signer: Signer): RandomNumberGeneratorV2__factory {
    return super.connect(signer) as RandomNumberGeneratorV2__factory;
  }
  static readonly contractName: "RandomNumberGeneratorV2";
  public readonly contractName: "RandomNumberGeneratorV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberGeneratorV2Interface {
    return new utils.Interface(_abi) as RandomNumberGeneratorV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberGeneratorV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberGeneratorV2;
  }
}
