/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RandomNumberGeneratorV2,
  RandomNumberGeneratorV2Interface,
} from "../RandomNumberGeneratorV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subscriptionId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keyHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "ReturnedRandomness",
    type: "event",
  },
  {
    inputs: [],
    name: "getSRandomWord",
    outputs: [
      {
        internalType: "uint256",
        name: "_s_randomWord",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSRandomWords",
    outputs: [
      {
        internalType: "uint256[]",
        name: "_s_randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_requestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610180604052620186a063ffffffff166101209063ffffffff1660e01b815250600361ffff166101409061ffff1660f01b815250600263ffffffff166101609063ffffffff1660e01b8152503480156200005857600080fd5b5060405162000d2238038062000d2283398181016040528101906200007e9190620001dd565b828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050508273ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080610100818152505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff1660e08167ffffffffffffffff1660c01b8152505050505050620002f4565b600081519050620001a981620002a6565b92915050565b600081519050620001c081620002c0565b92915050565b600081519050620001d781620002da565b92915050565b60008060008060808587031215620001fa57620001f9620002a1565b5b60006200020a87828801620001c6565b94505060206200021d8782880162000198565b9350506040620002308782880162000198565b92505060606200024387828801620001af565b91505092959194509250565b60006200025c826200026d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b600080fd5b620002b1816200024f565b8114620002bd57600080fd5b50565b620002cb8162000263565b8114620002d757600080fd5b50565b620002e5816200028d565b8114620002f157600080fd5b50565b60805160601c60a05160601c60c05160601c60e05160c01c610100516101205160e01c6101405160f01c6101605160e01c6109af620003736000396000610317015260006102d5015260006102f601526000610293015260006102b4015260005050600061025701526000818161013f015261019301526109af6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301d03440146100675780631fe543e3146100855780633e109808146100a1578063e0c86289146100bf578063e89e106a146100c9578063f6eaffc8146100e7575b600080fd5b61006f610117565b60405161007c9190610791565b60405180910390f35b61009f600480360381019061009a91906105b8565b61013d565b005b6100a96101fd565b6040516100b6919061071c565b60405180910390f35b6100c7610255565b005b6100d16103b0565b6040516100de9190610791565b60405180910390f35b61010160048036038101906100fc919061055e565b6103b6565b60405161010e9190610791565b60405180910390f35b60008060008154811061012d5761012c6108df565b5b9060005260206000200154905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ef57337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016101e69291906106f3565b60405180910390fd5b6101f982826103da565b5050565b6060600080548060200260200160405190810160405280929190818152602001828054801561024b57602002820191906000526020600020905b815481526020019060010190808311610237575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040518663ffffffff1660e01b815260040161035695949392919061073e565b602060405180830381600087803b15801561037057600080fd5b505af1158015610384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a8919061058b565b600181905550565b60015481565b600081815481106103c657600080fd5b906000526020600020016000915090505481565b80600090805190602001906103f092919061042c565b507fefb16d61046900da527008568620fb9f8420e2f5ed4de3bfbded5035c9362b0e81604051610420919061071c565b60405180910390a15050565b828054828255906000526020600020908101928215610468579160200282015b8281111561046757825182559160200191906001019061044c565b5b5090506104759190610479565b5090565b5b8082111561049257600081600090555060010161047a565b5090565b60006104a96104a4846107d1565b6107ac565b905080838252602082019050828560208602820111156104cc576104cb610942565b5b60005b858110156104fc57816104e28882610534565b8452602084019350602083019250506001810190506104cf565b5050509392505050565b600082601f83011261051b5761051a61093d565b5b813561052b848260208601610496565b91505092915050565b60008135905061054381610962565b92915050565b60008151905061055881610962565b92915050565b6000602082840312156105745761057361094c565b5b600061058284828501610534565b91505092915050565b6000602082840312156105a1576105a061094c565b5b60006105af84828501610549565b91505092915050565b600080604083850312156105cf576105ce61094c565b5b60006105dd85828601610534565b925050602083013567ffffffffffffffff8111156105fe576105fd610947565b5b61060a85828601610506565b9150509250929050565b600061062083836106b7565b60208301905092915050565b61063581610836565b82525050565b60006106468261080d565b6106508185610825565b935061065b836107fd565b8060005b8381101561068c5781516106738882610614565b975061067e83610818565b92505060018101905061065f565b5085935050505092915050565b6106a281610848565b82525050565b6106b181610852565b82525050565b6106c081610880565b82525050565b6106cf81610880565b82525050565b6106de8161088a565b82525050565b6106ed8161089a565b82525050565b6000604082019050610708600083018561062c565b610715602083018461062c565b9392505050565b60006020820190508181036000830152610736818461063b565b905092915050565b600060a0820190506107536000830188610699565b61076060208301876106e4565b61076d60408301866106a8565b61077a60608301856106d5565b61078760808301846106d5565b9695505050505050565b60006020820190506107a660008301846106c6565b92915050565b60006107b66107c7565b90506107c282826108ae565b919050565b6000604051905090565b600067ffffffffffffffff8211156107ec576107eb61090e565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061084182610860565b9050919050565b6000819050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600067ffffffffffffffff82169050919050565b6108b782610951565b810181811067ffffffffffffffff821117156108d6576108d561090e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61096b81610880565b811461097657600080fd5b5056fea2646970667358221220fe0c498395d00fccc9916190a64aebdeb4e455dbc841d3d634be0b6bfd61d8d764736f6c63430008070033";

type RandomNumberGeneratorV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RandomNumberGeneratorV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RandomNumberGeneratorV2__factory extends ContractFactory {
  constructor(...args: RandomNumberGeneratorV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RandomNumberGeneratorV2";
  }

  deploy(
    subscriptionId: BigNumberish,
    vrfCoordinator: string,
    link: string,
    keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RandomNumberGeneratorV2> {
    return super.deploy(
      subscriptionId,
      vrfCoordinator,
      link,
      keyHash,
      overrides || {}
    ) as Promise<RandomNumberGeneratorV2>;
  }
  getDeployTransaction(
    subscriptionId: BigNumberish,
    vrfCoordinator: string,
    link: string,
    keyHash: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      subscriptionId,
      vrfCoordinator,
      link,
      keyHash,
      overrides || {}
    );
  }
  attach(address: string): RandomNumberGeneratorV2 {
    return super.attach(address) as RandomNumberGeneratorV2;
  }
  connect(signer: Signer): RandomNumberGeneratorV2__factory {
    return super.connect(signer) as RandomNumberGeneratorV2__factory;
  }
  static readonly contractName: "RandomNumberGeneratorV2";
  public readonly contractName: "RandomNumberGeneratorV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RandomNumberGeneratorV2Interface {
    return new utils.Interface(_abi) as RandomNumberGeneratorV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RandomNumberGeneratorV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RandomNumberGeneratorV2;
  }
}
